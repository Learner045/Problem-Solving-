/*
Input: root = [1,2,3,4,null,5,6,null,null,7]
Output: 7
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    Map<Integer, Integer> map;
    public int findBottomLeftValue(TreeNode root) {
        map = new HashMap<>();
        
        solve(root, 1);
        int size = map.size();
        return map.get(size);
    }
    public void solve(TreeNode root, int level){
        if(root == null)return;
        
        if(!map.containsKey(level))map.put(level, root.val);
        
        solve(root.left, level+1);
        solve(root.right, level+1);
        
    }
}
