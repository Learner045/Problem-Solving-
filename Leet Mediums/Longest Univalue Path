/*
Input: root = [1,4,5,4,4,5]
Output: 2
*/



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int ans = 0;
    public int longestUnivaluePath(TreeNode root) {
       solve(root);
       return ans;
    }
    
    public int solve(TreeNode root){
       
        if(root == null)return 0;
        if(root.left == null && root.right==null)return 0;
        
       int left = solve(root.left);
       int right = solve(root.right);
        
       int arrowLeft = 0;
       int arrowRight = 0;
        
        if(root.left!=null && root.val == root.left.val){
            arrowLeft += left+1;
        }
        if(root.right!=null && root.val == root.right.val){
            arrowRight += right+1;
        }
        
        ans = Math.max(ans, arrowLeft+arrowRight);
        return Math.max(arrowLeft, arrowRight);
        
        
        
    }
}
