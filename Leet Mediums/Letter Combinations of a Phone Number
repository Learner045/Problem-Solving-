/*
Input: digits = "23"
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]
*/

class Solution {
    List<String> result;
    Map<Character, String> map;
    public List<String> letterCombinations(String digits) {
       
        map = new HashMap<>();
        result = new ArrayList<>();
         if(digits.equals(""))return result;
        
        map.put('2',"abc");
        map.put('3',"def");
        map.put('4',"ghi");
        map.put('5',"jkl");
        map.put('6',"mno");
        map.put('7',"pqrs");
        map.put('8',"tuv");
        map.put('9',"wxyz");
        
        solve(digits, 0, new StringBuilder());
        
        return result;
    }
    
    public void solve(String digits, int index, StringBuilder sb){
        if(index >= digits.length()){
            result.add(sb.toString());
            return;
        }
        
        String alphas = map.get(digits.charAt(index));
        for(int i=0; i< alphas.length(); i++){
            sb.append(alphas.charAt(i));
            solve(digits, index+1, sb);
            sb.deleteCharAt(sb.length()-1);
        }
        
    }
}
