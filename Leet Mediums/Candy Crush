class Solution {
    public int[][] candyCrush(int[][] board) {
        
        int R = board.length;
        int C = board[0].length;
        Boolean todo = false;
        for(int r=0; r<R; r++){
            for(int c=0; c+2<C; c++){
                int val = Math.abs(board[r][c]);
                if(val!=0 && Math.abs(board[r][c+1]) == Math.abs(board[r][c+2]) && Math.abs(board[r][c+1])==val ){
                    //3 horizontal matches
                    todo = true;
                    board[r][c] = board[r][c+1] = board[r][c+2] = -val;
                    
                }
            }
        }
        
        for(int r=0; r+2<R; r++){
            for(int c=0; c<C; c++){
                int val = Math.abs(board[r][c]);
                if(val!=0 && Math.abs(board[r+1][c]) == Math.abs(board[r+2][c]) && Math.abs(board[r+1][c])==val ){
                    //3 vertical matches
                    todo = true;
                    board[r][c] = board[r+1][c] = board[r+2][c] = -val;
                    
                }
            }
        }
        
        int wr = R-1;
        for(int c=0; c<C; c++){
            wr = R-1;
            for(int r=R-1; r>=0; r--){
                if(board[r][c]>0){
                    //copy 
                    board[wr--][c] = board[r][c];
                }
            }
            
            while(wr>=0)board[wr--][c] = 0;
        }
        
        return todo? candyCrush(board): board;
        
    }
}
