/*
Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]
*/

class Solution {
    
    public int getMax(int[] nums, int st, int end){
        int max = Integer.MIN_VALUE;
        for(int i=st; i<=end; i++){
            max = Math.max(max, nums[i]);
        }
        return max;
    }
    
    public int[] maxSlidingWindow(int[] nums, int k) {
        if(k==1)return nums;
        
        List<Integer> result = new ArrayList<>();
        
        int max = Integer.MIN_VALUE;
        
        max = Math.max(max, getMax(nums, 0, k-1));
        result.add(max);
        
        for(int i=k;i<nums.length; i++){
            if(nums[i]>max){
                max = Math.max(max, nums[i]);
            }else{
                if(nums[i-k] == max){
                    //we may have removed max, so recalc it
                    //    System.out.println("we could have removed  max");
                    max =  getMax(nums,i-k+1, i);
                }
            }
            result.add(max);
        }
        
        int[] res = new int[result.size()];
        for(int i=0; i<result.size(); i++){
            res[i] = result.get(i);
        }
        
        return res;
        
    }
}
