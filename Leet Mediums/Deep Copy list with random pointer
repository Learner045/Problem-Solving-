/*
Input: head = [[7,null],[13,0],[11,4],[10,2],[1,0]]
Output: [[7,null],[13,0],[11,4],[10,2],[1,0]]
*/


/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    Map<Node, Node> hm = new HashMap<>();
    
    public Node copyRandomList(Node head) {
        if(head == null)return null;
        
        copy(head);
        
        return hm.get(head);
    }
    
    public Node copy(Node head){
        if(head == null)return null;
        
        if(hm.containsKey(head)){
            return hm.get(head);
        }else{
            
            Node newNode = new Node(head.val);
            hm.put(head, newNode);
          
            newNode.random = copy(head.random);
            newNode.next = copy(head.next);   
            return newNode;
        }
        
    }
}
