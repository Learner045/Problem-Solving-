/*
Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
*/

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;
        
        for(int i=0; i<=Math.pow(2,n)-1; i++){
            int num = i;
            List<Integer> intm = new ArrayList<>();
            for(int bit = 0; bit<n; bit++){
                if(isBitSet(num, bit)){
                    intm.add(nums[bit]);
                }
            }
            result.add(intm);
            
        }
        
        return result;
    }
    
    public boolean isBitSet(int num, int bit){
   
        int marker = 1;
        num = num>>bit;
        if( (num & marker) == 1 ){return true;}
        return false;
    }
}
