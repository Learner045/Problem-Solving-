/*
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> res = new ArrayList<>();
        if(root == null)return res;
        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int count = 0;
        while(!queue.isEmpty()){
            TreeNode node = queue.peek();
            int size = queue.size();
            LinkedList<Integer> list = new LinkedList<>();
            for(int i=0; i<size; i++){
                TreeNode n = queue.remove();
                if(count%2 == 0){
                    list.addLast(n.val);
                }else{
                    list.addFirst(n.val);
                }
                if(n.left!=null)queue.add(n.left);
                if(n.right!=null)queue.add(n.right);
            }
            res.add(list);
            count++;
        }
        
        return res;
    }
}
