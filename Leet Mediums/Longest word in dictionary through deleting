/*
Input: s = "abpcplea", dictionary = ["ale","apple","monkey","plea"]
Output: "apple"
*/

class Solution {
    public String findLongestWord(String s, List<String> dictionary) {
        
        //we can directly check if the word in dictionary is a subseq of our given string
        //if it is a subseq, we can form that by deleting chars in s
        
        Collections.sort(dictionary, (a,b)->{
            if(a.length() == b.length())return a.compareTo(b);
            else return Integer.compare(b.length(), a.length());
        });
        
        for(String str: dictionary){
            if(isSubseq(str, s))return str;
        }
        
        return "";
    }
    
    public boolean isSubseq(String subseq, String orig){
        int i=0; int j=0;
        
        while(i<subseq.length() && j<orig.length()){
            if(subseq.charAt(i) == orig.charAt(j))i++;
            
            j++;
        }
        
        if(i == subseq.length())return true;
        return false;
    }
}
