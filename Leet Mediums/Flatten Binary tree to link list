/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
         trav(root);
    }
    public TreeNode trav(TreeNode root){
        if(root == null)return null;
        if(root.left == null && root.right == null)return root;
        
        
        TreeNode left = trav(root.left);
        TreeNode right = trav(root.right);
        
        if(left != null && right!=null){
        root.right = left;
      
        while(left.right!=null)left = left.right;
        left.right = right;
        }
        else if(left==null && right!=null){
            root.right = right;
        }else if(left!=null && right == null){
            root.right = left;
        }
        
        root.left = null;
       // root.right = null;
        return root;
    }
}
