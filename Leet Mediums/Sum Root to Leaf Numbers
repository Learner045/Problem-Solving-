/*
Input: root = [4,9,0,5,1]
Output: 1026
Explanation:
The root-to-leaf path 4->9->5 represents the number 495.
The root-to-leaf path 4->9->1 represents the number 491.
The root-to-leaf path 4->0 represents the number 40.
Therefore, sum = 495 + 491 + 40 = 1026.
*/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int total = 0;
    
    public int sumNumbers(TreeNode root) {
        if(root == null)return 0;
        
        solve(root, new StringBuilder());
        return total;
        
    }
    
    public void solve(TreeNode root, StringBuilder sb){
        if(root == null)return;
        if(root.left == null && root.right==null ){
            sb.append(root.val);
            total+= Integer.parseInt(sb.toString());
            sb.deleteCharAt(sb.length()-1);
            return;
        }
        
        sb.append(root.val);
        solve(root.left, sb);
        solve(root.right, sb);
        sb.deleteCharAt(sb.length()-1);
        
    }
}
