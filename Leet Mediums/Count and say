class Solution {
    public String countAndSay(int n) {
        if(n == 1)return "1";
        String dp[] = new String[n+1];
        Map<Integer, Integer> map = new LinkedHashMap<>(); //num - count
        dp[1] = "1";
        dp[2] = "11";
        
        for(int i=3; i<=n; i++){
            String prev = dp[i-1];
            StringBuilder sb = new StringBuilder();
            int count = 1;
            int j = 0;
            for(j=0; j+1<prev.length(); j++){
                if(prev.charAt(j) == prev.charAt(j+1)){
                    count++;
                }else{
                    sb.append(count);
                    sb.append(prev.charAt(j));
                    count = 1;
                }
            }
            
            if(prev.charAt(j)==prev.charAt(j-1) && prev.length()%2==1){
                count++;
            }
            sb.append(count);
            sb.append(prev.charAt(j));
            
            dp[i] = sb.toString();
        }
        
        return dp[n];
        
    }
}
