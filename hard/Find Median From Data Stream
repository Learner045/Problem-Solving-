class MedianFinder {

    /** initialize your data structure here. */
    PriorityQueue<Integer> maxHeap; //store min numbers
    PriorityQueue<Integer> minHeap; //store max numbers
    
    public MedianFinder() {
        maxHeap = new PriorityQueue<>((a,b)->Integer.compare(b,a));
        minHeap = new PriorityQueue<>((a,b)->Integer.compare(a,b));
    }
    
    public void addNum(int num) {
        maxHeap.add(num);
        minHeap.add(maxHeap.remove());
        
        if(minHeap.size()> maxHeap.size()){
            //off balance
            maxHeap.add(minHeap.remove());
        }
    }
    
    public double findMedian() {
        int sz1 = maxHeap.size();
        int sz2 = minHeap.size();
        if(sz1 == 0 && sz2 == 0)return 0;
        
        if((sz1+sz2)%2 == 0)return ((maxHeap.peek()+minHeap.peek())/2.0);
        
        else return maxHeap.peek();
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
