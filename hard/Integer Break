class Solution {
    public int integerBreak(int n) {
        if(n==2)return 1;
        if(n==3)return 2;
        
        int[] dp = new int[n+1]; //bottom up formation of products from 2 and 3
        dp[2] = 2;
        dp[3] = 3;
        
        
        //if we try for n = 7, we get (3+2+2), 8->(3+3+2) , 9->(3+3+3) , etc
        //we can form products with sums of 2 and 3
        
        for(int i=2; i<=n; i++){
            for(int k=2; k<i/2+1; k++){
                dp[i] = Math.max(dp[i], dp[k]*dp[i-k]);
            }
        }
        
        return dp[n];
        
    }
}
