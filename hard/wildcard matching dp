/*
Input: s = "adceb", p = "*a*b"
Output: true
Explanation: The first '*' matches the empty sequence, while the second '*' matches the substring "dce".
*/

class Solution {
    public boolean isMatch(String s, String p) {
        
        // here, most imp insight is 
        //when we encounter * there can be 2 cases
        //1. either no character match, we simply increment the pattern index
        //2. one or more character match, we simply increment the string index
        
        //if char match or char is ?, we increment both pattern and string index
        
        if(s.equals("") && p.equals(""))return true;
        else if(p.equals(""))return false;
        
        p = p.replaceAll("[*]+","*"); //cleanup
      
        int m = s.length()+1; //row
        int n = p.length()+1; //col
        
    
        boolean dp[][] = new boolean[m][n];
        
        dp[0][0] = true; //both pattern and string empty
        
        if(p.charAt(0)=='*')dp[0][1] = true; //* matches empty string
        
        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
            
            
                if(s.charAt(i-1) == p.charAt(j-1) || p.charAt(j-1)=='?'){
                    dp[i][j] = dp[i-1][j-1];
                    
                }
                else if(p.charAt(j-1) == '*'){
                    dp[i][j] = dp[i][j-1] || dp[i-1][j];
                }else{
                    dp[i][j] = false;
                }
                
            }
        }
        
        return dp[m-1][n-1];
        
    }
}
