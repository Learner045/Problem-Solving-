/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int maxDiam = 0;
    public int diameterOfBinaryTree(TreeNode root) {
          
        int res = solve(root);
     //   System.out.println(res);
        return maxDiam;
    }
    
    public int solve(TreeNode root){
        if(root == null)return 0;
        if(root.left == null && root.right==null)return 1;
        
        int leftDiam = solve(root.left);
        int rightDiam = solve(root.right);
        
        maxDiam = Math.max(maxDiam, leftDiam+rightDiam);
        
        return Math.max(leftDiam, rightDiam)+1;
        

    }
}
